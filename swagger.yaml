openapi: "3.0.0"
info:
  title: MSA Backend API
  description: Backend for MSA main website and ticketing system.
  version: 1.0.0

servers:
  - url: http://localhost:8080
paths:
  /auth/register:
    post:
      tags:
        - Accounts
      summary: Creates a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                password:
                  type: string
                  format: password
                email:
                  type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
          links:
            GetUserById:
              description: The `id` value returned can be used for `GET /users/{userId}` endpoint
              operationId: getUser
              parameters:
                userId: $response.body#/id
        '400':
          description: Not enough data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message: 
                    type: string
                  error:
                    type: array
                    items: 
                      type: object
                      properties:
                        field: 
                          type: string
                        desc:
                          type: string
                  
  /auth/login:
    post:
      tags:
        - Accounts
      summary: Existing user's login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  format: password
                email:
                  type: string
      responses:
        '200':
          description: Logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          description: Not enough data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code: 
                    type: integer
                  message:
                    type: string
        '404':
          description: User not found. For security purposes, this is returned whenever the email does not exist, or that the password is wrong
  /users/:
    get:
      description: Accessible only by role='admin' users
      security:
      - BasicAuth: []
      tags:
        - User Management
      responses:
        '200':
          description: Returns all users. Used by admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      $ref: '#/components/schemas/User'
        '401':
          description: This user is not privileged to use this endpoint
        '403':
          description: User not authenticated
  /users/{userId}:
    delete:
      description: deletes user. Accessible only by role='admin' users.
      tags:
        - User Management
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Deleted
        '401':
          description: This user is not privileged to use this endpoint
        '403':
          description: User not authenticated
        '404':
          description: No such user
    patch:
      description: |
        Updates any field of a user **except the userId**. A user can only update his own user profile. Extra fields never possessed by the user are ignored, whereas **supplied fields that have null values are reset**. 
        Currently, isAdmin is the only basic authorisation mechanism. Be prepared that this field will change when the new authorisation is in place: privilege management APIs will be in another endpoint.
      tags:
        - User Management
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                userId:
                  type: string
                isAdmin:
                  type: boolean
                course:
                  type: string
                  description: short form of NTU course
                  example: CSC
                gender:
                  type: string
                  description: of type M or F
                firstName:
                  type: string
                lastName:
                  type: string
                uniEntryYear:
                  type: integer
                origin:
                  type: string
                  description: state, not country
                  example: Selangor
                profilePhoto:
                  type: string
                  format: binary
                  description: File of the profile photo
            
      responses:
        '200':
          description: Update successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          description: Not privileged to modify other user's account
        '403':
          description: User not authenticated
        '404':
          description: No such user  
  /events/:
    get:
      description: Get all published events
      tags:
        - Events
      responses:
        '200':
          description: Events retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      $ref: '#/components/schemas/Event'
    post:
      description: Create an event
      tags:
        - Events
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Full event name
                  example: MSA Night 2023
                desc:
                  type: string
                  description: Full marketing textual description. Can be in markdown format.
                startDt:
                  type: string
                  format: date-time
                endDt:
                  type: string
                  format: date-time
                poster:
                  type: string
                  format: binary
                venue:
                  type: string
                promoVideoLink:
                  type: string
                  description: url of promotion video link posted on social media
                registerStartDt:
                  type: string
                  format: date-time
                registerEndDt:
                  type: string
                  format: date-time
                entryPrice:
                  type: number
                  default: 0
                  description: Entry price in SGD
            encoding:
              poster:
                contentType: image/*
      responses:
        '201':
          description: Event created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                  data:
                    $ref: '#/components/schemas/Event'
        '400':
          description: Invalid field format or missing values
          content:
            application/json:
              schema:
                type: object
                properties:
                  code: 
                    type: integer
                  message: 
                    type: string
                  error:
                    type: array
                    items: 
                      type: object
        '401':
          description: Event must be created by admin
        '403':
          description: Event can only be accessed by authenticated user


  /events/{eventId}:
    parameters:
      - name: eventId
        in: path
        required: true
        description: Event ID
        schema:
          type: string
          format: uuid
    get:
      tags:
        - Events
      description: Get a specific event
      responses:
        '200':
          description: Event retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Event'
        '403':
          description: Event can only be accessed by authenticated user
        '404':
          description: Event does not exist
    delete:
      description: Delete an event
      security:
        - BasicAuth: []
      tags:
        - Events
      parameters:
      - name: eventId
        in: path
        required: true
        description: Event ID
        schema:
          type: string
          format: uuid
      responses:
        '204':
          description: Deleted
        '401':
          description: This user is not privileged to use this endpoint
        '403':
          description: User not authenticated
        '404':
          description: No such event
      
    patch:
      tags:
        - Events
      parameters:
      - name: eventId
        in: path
        required: true
        description: Event ID
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Full event name
                  example: MSA Night 2023
                desc:
                  type: string
                  description: Full marketing textual description. Can be in markdown format.
                startDt:
                  type: string
                  format: date-time
                endDt:
                  type: string
                  format: date-time
                poster:
                  type: string
                  format: binary
                venue:
                  type: string
                promoVideoLink:
                  type: string
                  description: url of promotion video link posted on social media
                registerStartDt:
                  type: string
                  format: date-time
                registerEndDt:
                  type: string
                  format: date-time
                entryPrice:
                  type: number
                  default: 0
                  description: Entry price in SGD
      responses:
        '200':
          description: Event created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                  data:
                    $ref: '#/components/schemas/Event'
        '400':
          description: Invalid field format or missing values
          content:
            application/json:
              schema:
                type: object
                properties:
                  code: 
                    type: integer
                  message: 
                    type: string
                  error:
                    type: array
                    items: 
                      type: object
        '401':
          description: Event must be created by admin
        '403':
          description: Event can only be accessed by authenticated user

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        isAdmin:
          type: boolean
        creationDt:
          type: string
          description: stored as datetime in backend
          format: date-time
        role:
          type: string
          description: Either admin or user
        course:
          type: string
          description: short form of NTU course
          example: CSC
        gender:
          type: string
          description: of type M or F
        firstName:
          type: string
        lastName:
          type: string
        uniEntryYear:
          type: integer
        origin:
          type: string
          description: state, not country
          example: Selangor
        profilePhotoLoc:
          type: string
          description: URL of the photo location
      required:
        - email
        - userId
    Event:
      type: object
      properties: 
        id:
          type: string
        name:
          type: string
          description: Full event name
          example: MSA Night 2023
        desc:
          type: string
          description: Full marketing textual description. Can be in markdown format.
        startDt:
          type: string
          format: date-time
        endDt:
          type: string
          format: date-time
        creationDt:
          type: string
          format: date-time
        posterLoc:
          type: string
        venue:
          type: string
        promoVideoLink:
          type: string
          description: url of promotion video link posted on social media
        registerStartDt:
          type: string
          format: date-time
        registerEndDt:
          type: string
          format: date-time
        entryPrice:
          type: number
          default: 0
          description: Entry price in SGD
      required:
        - name
        - startDt

        

        